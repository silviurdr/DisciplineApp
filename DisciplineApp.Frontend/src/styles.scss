
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

html {
  @include mat.theme((
    color: (
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}
/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }


/* Add this to your global styles.scss file */

/* ===================================
   GLOBAL SMOOTH TRANSITIONS
   =================================== */

* {
  transition: opacity 0.2s ease, transform 0.2s ease;
}

/* Page transitions */
.page-enter {
  animation: pageEnter 0.4s ease-out;
}

.page-leave {
  animation: pageLeave 0.3s ease-in;
}

@keyframes pageEnter {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes pageLeave {
  from {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(-10px);
  }
}

/* ===================================
   ENHANCED COMPONENT ANIMATIONS
   =================================== */

/* Calendar day animations */
.calendar-day {
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  
  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }
}

/* Task row animations */
.task-row {
  transition: all 0.2s ease;
  
  &:hover {
    transform: translateX(2px);
    background: rgba(255, 255, 255, 0.03);
  }
}

/* Button animations */
button, .btn {
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  
  &:hover:not(:disabled) {
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }
  
  &:active {
    transform: translateY(0);
  }
}

/* Modal animations */
.modal-overlay {
  animation: modalBackdropEnter 0.3s ease;
}

.modal-content {
  animation: modalContentEnter 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

@keyframes modalBackdropEnter {
  from { 
    opacity: 0; 
    backdrop-filter: blur(0px);
  }
  to { 
    opacity: 1; 
    backdrop-filter: blur(8px);
  }
}

@keyframes modalContentEnter {
  from {
    opacity: 0;
    transform: scale(0.9) translateY(-20px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

/* ===================================
   LOADING STATES
   =================================== */

.loading-state {
  animation: loadingEnter 0.3s ease;
}

@keyframes loadingEnter {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Enhanced spinner */
.loading-spinner {
  animation: 
    spin 1s linear infinite,
    pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

/* ===================================
   STAGGERED ANIMATIONS FOR LISTS
   =================================== */

.calendar-grid .calendar-day {
  animation: staggerIn 0.4s ease forwards;
  opacity: 0;
}

.calendar-grid .calendar-day:nth-child(1) { animation-delay: 0.05s; }
.calendar-grid .calendar-day:nth-child(2) { animation-delay: 0.1s; }
.calendar-grid .calendar-day:nth-child(3) { animation-delay: 0.15s; }
.calendar-grid .calendar-day:nth-child(4) { animation-delay: 0.2s; }
.calendar-grid .calendar-day:nth-child(5) { animation-delay: 0.25s; }
.calendar-grid .calendar-day:nth-child(6) { animation-delay: 0.3s; }
.calendar-grid .calendar-day:nth-child(7) { animation-delay: 0.35s; }

@keyframes staggerIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Task list staggered animation */
.task-row {
  animation: taskRowIn 0.3s ease forwards;
  opacity: 0;
}

.task-row:nth-child(1) { animation-delay: 0.1s; }
.task-row:nth-child(2) { animation-delay: 0.15s; }
.task-row:nth-child(3) { animation-delay: 0.2s; }
.task-row:nth-child(4) { animation-delay: 0.25s; }
.task-row:nth-child(5) { animation-delay: 0.3s; }

@keyframes taskRowIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* ===================================
   RESPONSIVE ANIMATION REDUCTIONS
   =================================== */

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* ===================================
   FOCUS IMPROVEMENTS
   =================================== */

button:focus-visible,
.nav-link:focus-visible {
  outline: 2px solid #64b5f6;
  outline-offset: 2px;
  border-radius: 4px;
}

/* ===================================
   PERFORMANCE IMPROVEMENTS
   =================================== */

.calendar-grid,
.task-list,
.habits-list {
  will-change: transform;
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Optimize animations for better performance */
.loading-spinner,
.modal-content,
.calendar-day {
  transform: translateZ(0);
}